name: ic-ref

on:
  push:
    branches:
      - next
  pull_request_target:
    if: github.repository != 'dfinity/agent-rs'
  pull_request:
    if: github.repository == 'dfinity/agent-rs'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [ linux-stable ]
        include:
          - build: linux-stable
            ghc: '8.8.4'
            spec: '0.14.0'
            os: ubuntu-latest
            rust: stable

    steps:
      - uses: actions/checkout@v2
        with:
          path: main
      - uses: actions/checkout@v2
        with:
          repository: 'dfinity-lab/ic-ref'
          # Personal Read-only Access Token created by hans.larsen@dfinity.org
          token: ${{ secrets.IC_REF_TOKEN }}
          path: ic-ref
          ref: ${{ matrix.spec }}
      - uses: actions/checkout@v2
        with:
          repository: 'dfinity/wallet-rs'
          # Personal Read-only Access Token created by hans.larsen@dfinity.org
          token: ${{ secrets.IC_REF_TOKEN }}
          path: wallet-rs
          ref: 1ee14200922af2c143dfc82680c89f57e942f241

      - name: Cache ~/.cabal/store
        uses: actions/cache@v2
        with:
          path: |
            ~/.cabal/store
          key: ${{ runner.os }}-${{ matrix.ghc }}-cabal-store

      - uses: actions/setup-haskell@v1.1.3
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: '3.2'

      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        run: |
          rustup update ${{ matrix.rust }} --no-self-update
          rustup default ${{ matrix.rust }}
          rustup target add wasm32-unknown-unknown

      - name: Build ic-ref
        run: |
          ls -l /opt/ghc/
          export PATH=/opt/ghc/bin:$PATH
          cabal --version
          ghc-${{ matrix.ghc }} --version
          mkdir -p $HOME/bin
          cd ic-ref/impl
          cabal update
          cabal install exe:ic-ref -w ghc-${{ matrix.ghc }} --overwrite-policy=always  --installdir=$HOME/bin

      - name: Build universal-canister
        run: |
          cd ic-ref/universal-canister
          cargo build --target wasm32-unknown-unknown --release
          cp target/wasm32-unknown-unknown/release/universal_canister.wasm $HOME/canister.wasm

      - name: Build wallet canister
        run: |
          cd wallet-rs/wallet
          sh build.sh
          cp target/wasm32-unknown-unknown/release/wallet-opt.wasm $HOME/wallet.wasm

      - name: Run Integration Tests
        run: |
          set -ex
          $HOME/bin/ic-ref --pick-port --write-port-to $HOME/ic_ref_port &
          sleep 1
          export IC_REF_PORT=$(cat $HOME/ic_ref_port)
          export IC_UNIVERSAL_CANISTER_PATH=$HOME/canister.wasm
          export IC_WALLET_CANISTER_PATH=$HOME/wallet.wasm
          cd main/ref-tests
          cargo test --all-features -- --ignored
          killall ic-ref
        env:
          RUST_BACKTRACE: 1

      - name: Run Doc Tests
        run: |
          set -ex
          $HOME/bin/ic-ref --pick-port --write-port-to $HOME/ic_ref_port &
          sleep 1
          export IC_REF_PORT=$(cat $HOME/ic_ref_port)
          cd main
          cargo test --all-features --doc -- --ignored
          killall ic-ref
        env:
          RUST_BACKTRACE: 1
