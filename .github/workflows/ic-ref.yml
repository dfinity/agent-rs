name: ic-ref

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [ linux-stable ]
        include:
          - build: linux-stable
            ghc: '8.10.7'
            spec: 'f771c6b3e7cdde413d3b960f63165c6ecf3e0b7c'
            os: ubuntu-latest
            rust: 1.55.0

    steps:
      - uses: haskell/actions/setup@v1
        with:
          ghc-version: ${{ matrix.ghc }}
      - uses: actions/checkout@v2
        with:
          path: main
      - uses: actions/checkout@v2
        with:
          repository: 'dfinity/ic-hs'
          path: ic-hs
          ref: ${{ matrix.spec }}
      - uses: actions/checkout@v2
        with:
          repository: 'dfinity/wallet-rs'
          path: wallet-rs
          ref: 9ef38bb7cd0fe17cda749bf8e9bbec5723da0e95

      - name: Cache ~/.cabal/store
        uses: actions/cache@v2
        with:
          path: |
            ~/.cabal/store
          key: cabal-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('ic-hs/cabal.project', 'ic-hs/cabal.project.freeze') }}
          restore-keys: cabal-${{ runner.os }}-${{ matrix.ghc }}-


      - uses: actions/setup-haskell@v1.1.3
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: '3.2'

      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        run: |
          rustup update ${{ matrix.rust }} --no-self-update
          rustup default ${{ matrix.rust }}
          rustup target add wasm32-unknown-unknown

      - name: Build ic-hs
        run: |
          ghc --version
          cabal --version
          ghc-${{ matrix.ghc }} --version
          mkdir -p $HOME/bin
          cd ic-hs
          cabal update
          cabal install exe:ic-ref -w ghc-${{ matrix.ghc }} --overwrite-policy=always  --installdir=$HOME/bin

      - name: Build universal-canister
        run: |
          cd ic-hs/universal-canister
          cargo build --target wasm32-unknown-unknown --release
          cp target/wasm32-unknown-unknown/release/universal_canister.wasm $HOME/canister.wasm

      - name: Build wallet canister
        run: |
          cd wallet-rs/
          sh ./wallet/build.sh
          cp wallet/target/wasm32-unknown-unknown/release/wallet-opt.wasm $HOME/wallet.wasm

      - name: Run Integration Tests
        run: |
          set -ex
          $HOME/bin/ic-ref --pick-port --write-port-to $HOME/ic_ref_port &
          sleep 1
          export IC_REF_PORT=$(cat $HOME/ic_ref_port)
          export IC_UNIVERSAL_CANISTER_PATH=$HOME/canister.wasm
          export IC_WALLET_CANISTER_PATH=$HOME/wallet.wasm
          cd main/ref-tests
          cargo test --all-features -- --ignored
          killall ic-ref
        env:
          RUST_BACKTRACE: 1

      - name: Install and Configure SoftHSM
        run: |
          set -ex
          sudo apt-get install -f libsofthsm2 opensc-pkcs11 opensc
          sudo usermod -a -G softhsm $USER
          echo "SOFTHSM2_CONF=$HOME/softhsm.conf" >>$GITHUB_ENV
          echo "directories.tokendir = $HOME/softhsm/tokens/" >$HOME/softhsm.conf
          mkdir -p $HOME/softhsm/tokens

      - name: Run Integration Tests with SoftHSM
        run: |
          set -ex
          softhsm2-util --init-token --slot $HSM_SLOT_INDEX --label "agent-rs-token" --so-pin $HSM_SO_PIN --pin $HSM_PIN
          # create key:
          pkcs11-tool -k --module $HSM_PKCS11_LIBRARY_PATH --login --slot-index $HSM_SLOT_INDEX -d $HSM_KEY_ID --key-type EC:prime256v1 --pin $HSM_PIN

          $HOME/bin/ic-ref --pick-port --write-port-to $HOME/ic_ref_port &
          sleep 1
          export IC_REF_PORT=$(cat $HOME/ic_ref_port)
          export IC_UNIVERSAL_CANISTER_PATH=$HOME/canister.wasm
          export IC_WALLET_CANISTER_PATH=$HOME/wallet.wasm
          cd main/ref-tests
          cargo test --all-features -- --ignored --nocapture --test-threads=1
          killall ic-ref
        env:
          RUST_BACKTRACE: 1
          HSM_PKCS11_LIBRARY_PATH: /usr/lib/softhsm/libsofthsm2.so
          HSM_SO_PIN: 123456
          HSM_PIN: 1234
          HSM_SLOT_INDEX: 0
          HSM_KEY_ID: abcdef

      - name: Run Doc Tests
        run: |
          set -ex
          $HOME/bin/ic-ref --pick-port --write-port-to $HOME/ic_ref_port &
          sleep 1
          export IC_REF_PORT=$(cat $HOME/ic_ref_port)
          cd main
          cargo test --all-features --doc -- --ignored
          killall ic-ref
        env:
          RUST_BACKTRACE: 1
