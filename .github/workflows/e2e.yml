name: test-e2e
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest ]
        rust: [ '1.60.0' ]
        dfx: [ '0.7.2', '0.8.4', '0.9.2', '0.10.1' ]

    steps:
      - uses: actions/checkout@v1
      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-1
      - name: Install Rust
        run: |
          rustup update ${{ matrix.rust }} --no-self-update
          rustup default ${{ matrix.rust }}
          rustup component add rustfmt

      - name: Provision Darwin
        if: contains(matrix.os, 'macos')
        run: bash .github/workflows/provision-darwin.sh
        env:
          INSTALL_DFX_VERSION: ${{ matrix.dfx }}
      - name: Provision Linux
        if: contains(matrix.os, 'ubuntu')
        run: bash .github/workflows/provision-linux.sh
        env:
          INSTALL_DFX_VERSION: ${{ matrix.dfx }}
      - name: Setup for dfx version differences
        run: |
          if [[ "${{ matrix.dfx }}" == "0.7.2" ]] || [[ "${{ matrix.dfx }}" == "0.8.4" ]]; then
              echo "DFX_NO_WALLET=--no-wallet" >> "$GITHUB_ENV"
          fi

      - name: 'Run tests'
        run: bats e2e/bash/icx-asset.bash e2e/bash/icx-asset-upload.bash

  aggregate:
    name: e2e:required
    if: ${{ always() }}
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
      - name: check e2e test result
        if: ${{ needs.test.result != 'success' }}
        run: exit 1
